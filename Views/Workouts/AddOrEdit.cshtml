@model NEWG.Models.Workout

@{
    ViewData["PageTitle"] = Model.WorkoutId == 0 ? "Create Workout" : "Edit";
}


<hr />
<div class="row">
    <div class="col-md-4">
        <div class=" widget p-5">
        <form asp-action="AddOrEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="WorkoutId" value="@Model.WorkoutId" />
            <div class="form-group">
                <ejs-datepicker id="datepicker" format="MMM-dd-yy" type="date" ejs-for="Date" placeholder="Date" floatLabelType="Always"></ejs-datepicker>
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-numerictextbox id="duration" step="10" decimals="2"  min="0" placeholder="Duration(minutes)" ejs-for="Duration" floatLabelType="Always"></ejs-numerictextbox>
                <span asp-validation-for="Duration" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-textbox id="notes" placeholder="Notes" ejs-for="Notes" floatLabelType="Always" multiline="true"></ejs-textbox>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-button id="submit" type="submit" cssClass="e-success" content="Submit"></ejs-button>
            </div>
        </form>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
